<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: EaselJS | 高見龍]]></title>
  <link href="http://kaochenlong.github.com/eddie-blog/category/easeljs/atom.xml" rel="self"/>
  <link href="http://kaochenlong.github.com/eddie-blog/"/>
  <updated>2013-12-11T05:36:09+08:00</updated>
  <id>http://kaochenlong.github.com/eddie-blog/</id>
  <author>
    <name><![CDATA[高見龍]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Play Canvas with EaselJS]]></title>
    <link href="http://kaochenlong.github.com/eddie-blog/2011/09/21/play-canvas-with-easeljs/"/>
    <updated>2011-09-21T01:00:00+08:00</updated>
    <id>http://kaochenlong.github.com/eddie-blog/2011/09/21/play-canvas-with-easeljs</id>
    <content type="html"><![CDATA[<p>這是昨晚在第7回AS讀書會上講的主題："<a href="http://blog.eddie.com.tw/slides/easeljs">Play Canvas with EaselJS</a>"所用到的投影片，內容主要是簡單介紹<a href="http://easeljs.com/">EaselJS</a>的用途，並以幾個簡單的幾個範例來做操作示範。這回是第一次使用的是<a href="http://imakewebthings.github.com/deck.js/">deck.js</a>來製作投影片，很多地方還不太熟悉，希望下回可以改進!</p>

<p>投影片連結：<a href="http://blog.eddie.com.tw/slides/easeljs">http://blog.eddie.com.tw/slides/easeljs</a></p>

<p>感謝Maso哥借我的”廖先生”小圖。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zoë – 從SWF匯出SpriteSheet的方便工具]]></title>
    <link href="http://kaochenlong.github.com/eddie-blog/2011/09/11/zoe/"/>
    <updated>2011-09-11T00:49:00+08:00</updated>
    <id>http://kaochenlong.github.com/eddie-blog/2011/09/11/zoe</id>
    <content type="html"><![CDATA[<p><a href="/2011/09/10/introduction-to-easeljs/">前一篇</a>簡單的介紹了一下<a href="http://easeljs.com/">EaselJS</a>，其中有個類別叫做<a href="http://easeljs.com/docs/SpriteSheet.html">SpriteSheet</a>，其實它就是把一些連續動作的圖片排排站的集合拼成一張圖，把檔案及相關的frame data包成SpriteSheet之後，再讓這些連續圖檔連續播放，感覺就會像動畫了。在之後的文章應該還會有更多關於SpriteSheet的說明，如果你還是沒辦法想像Spritesheet是怎麼回事，你可以回想一下設計師在Flash做動畫的時候，會在時間軸上安插一堆的關鍵影格(Key Frame)，然後讓每個關鍵影格的動作都稍微有些變化，大概就是這樣的概念，只是HTML5並沒有時間軸可以用。</p>

<p>一個跑步的角色的SpriteSheet圖片可能會長這樣：</p>

<p><img src="/images/2011/easeljs-hero-spritesheet.png" alt="image" /></p>

<p>感謝<a href="http://masolin.blogspot.com/">Maso哥</a>提供!</p>

<p>若你之前曾經用Flash做過些小遊戲，有些動態效果你已經做成MovieClip了，你當然可以打開繪圖軟體來一塊一塊的拼貼成SpriteSheet圖檔，然後還得自己寫frame data，這樣實在有些辛苦。有鑑於此，<a href="http://gskinner.com/blog">Grant Skinner</a>大神用Adobe AIR寫了個叫做<a href="http://easeljs.com/zoe.html">Zoë</a>小工具，可以讓你很容易的把SWF裡的東西轉成SpriteSheet圖檔，而且還順便幫你產生一個給EaselJS用的frame data。(GS大神請受我一拜!)</p>

<h2>安裝</h2>

<p>請到<a href="http://easeljs.com/zoe.html">Zoë</a>的下載頁面下載相關檔案，再來解壓縮、安裝，應該沒什麼太大的難度。(Zoë是用Adobe AIR寫的，所以你的電腦也需要安裝AIR的runtime)</p>

<h2>使用</h2>

<p>打開安裝好的Zoë，然後把SWF拖進去，它會自動開始幫你算邊界(bound)，或是你也可以自己切到Bounds功能按下Calculate按鈕：</p>

<p><img src="/images/2011/easeljs-zoe-bounds.png" alt="image" /></p>

<p>再切到Export功能，勾選EaselJS，按下Export按鈕：</p>

<p><img src="/images/2011/easeljs-zoe-export.png" alt="image" /></p>

<p>然後，你會得到一張拼好的png圖檔像這樣：</p>

<p><img src="/images/2011/easeljs-hero-spritesheet.png" alt="image" /></p>

<p>同時你還會得到一個同名的js檔，內容如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">frameData</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">run</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">img</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span class="p">()</span>
</span><span class='line'><span class="nx">img</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s2">&quot;hero.png&quot;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">spriteSheet</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SpriteSheet</span><span class="p">(</span><span class="nx">img</span><span class="p">,</span><span class="mi">48</span><span class="p">,</span><span class="mi">68</span><span class="p">,</span><span class="nx">frameData</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
如果你發現你的frameData裡面是空的，可能是因為你少了label關係，這是我在Flash IDE裡的樣子：</p>

<p><img src="/images/2011/easeljs-flash-label.png" alt="image" /></p>

<p>老實說這軟體沒什麼好介紹的，就是執行、匯出..就這樣。</p>

<p>用這樣轉檔有什麼好處? 首先，如果你之前有做好的動態，至少不用再手工拼貼連續圖。就算是從頭開始做，對設計師來說，在Flash使用關鍵影格來做動態也是很方便的(這是Flash的強項啊)。</p>

<h2>動手寫code了</h2>

<p>接下來，來試著讓這個SpriteSheet動起來!
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>SpriteSheet Demo<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;easel.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen&quot;</span><span class="nt">&gt;</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">pre</span><span class="o">&gt;&lt;</span><span class="nt">code</span><span class="o">&gt;</span><span class="nf">#my_canvas</span><span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="nb">gray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">stage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">init</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;my_canvas&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Stage</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">frameData</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">run</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">img</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">img</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s2">&quot;hero.png&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">spriteSheet</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SpriteSheet</span><span class="p">(</span><span class="nx">img</span><span class="p">,</span><span class="mi">48</span><span class="p">,</span><span class="mi">68</span><span class="p">,</span><span class="nx">frameData</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">hero</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BitmapSequence</span><span class="p">(</span><span class="nx">spriteSheet</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">hero</span><span class="p">.</span><span class="nx">gotoAndPlay</span><span class="p">(</span><span class="s2">&quot;run&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">hero</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Ticker</span><span class="p">.</span><span class="nx">setFPS</span><span class="p">(</span><span class="mi">24</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">Ticker</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">tick</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;javascript:init();&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;canvas</span> <span class="na">width=</span><span class="s">&quot;200&quot;</span> <span class="na">height=</span><span class="s">&quot;80&quot;</span> <span class="na">id=</span><span class="s">&quot;my_canvas&quot;</span><span class="nt">&gt;&lt;/canvas&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
效果如下：</p>

<iframe src="http://www.eddie.com.tw/labs/easeljs/002.html" width="225" height="100" frameborder="0"></iframe>


<p>或按<a href="http://www.eddie.com.tw/labs/easeljs/002.html">這裡</a>檢視。</p>

<p>程式碼跟上一個範例沒有太大的差別，中間那段SpriteSheet的內容是從剛剛產出的同名js剪過來的。但SpriteSheet本身並不是DisplayObject的一種，所以需要來個<a href="http://easeljs.com/docs/BitmapSequence.html">BitmapSequence</a>來把它包起來，然後執行閃客們都很熟悉的gotoAndPlay()：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">hero</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BitmapSequence</span><span class="p">(</span><span class="nx">spriteSheet</span><span class="p">);</span>
</span><span class='line'><span class="nx">hero</span><span class="p">.</span><span class="nx">gotoAndPlay</span><span class="p">(</span><span class="s2">&quot;run&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
看吧，不用幾行程式碼就能讓帥氣的廖添丁動起來了!!</p>

<p>最後，要再感謝一下Maso哥提供的原始檔。至於會不會在不久的將來就會看到HTML5版的廖添丁呢.. 也許大家可以期待一下囉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EaselJS新手上路]]></title>
    <link href="http://kaochenlong.github.com/eddie-blog/2011/09/10/introduction-to-easeljs/"/>
    <updated>2011-09-10T00:10:00+08:00</updated>
    <id>http://kaochenlong.github.com/eddie-blog/2011/09/10/introduction-to-easeljs</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>我一直都沒有忘記我是個閃客(Flasher)的身份，不過近年來因為貪圖紅寶石(Ruby)的漂亮，所以同時也把它一併收到工具箱裡，當做自己謀生的工具之一。</p>

<p>也許你會好奇，Flash/AS寫得好好的，幹嘛學人家用什麼HTML5+JavaScript?
問的好! 簡單的答案是：因為我高興；複雜一點的答案是：我本來就喜歡一些冷門的玩具，而且AS的部份我覺得目前學的能力暫時夠混飯吃了，想來試點別的。雖然HTML5的規格都還沒標準化，瀏覽器的支援程度也都不太一樣，但如果要等到它真的紅的時候再進場，大概也輪不到我了，所以趁專案的空檔來研究一下，若學有所成的話，之後也可以試著引進到自己或客戶的專案裡。</p>

<p>Canvas是HTML5新進的東西，如果以Flash/AS的角度來看，它有點像是Bitmap或是BitmapData，不過操作起來可不像在AS裡那麼簡單。感謝我心目中的偶像 – <a href="http://gskinner.com/blog">Grant Skinner</a>大神開發了一個叫做<a href="http://easeljs.com/">EaselJS</a>的framework，可以讓Canvas的操作變得簡單許多，而且有Flash-like的API可以用，讓Flash/AS Developer可以比較無痛的上手。衝著這點以及GS大神的名號，於是選擇了它來當做我的第一個入門framework。</p>

<p>首先就要來面臨一個最現實的問題了：瀏覽器的支援程度(或該說是客戶電腦的瀏覽器是不是支援?)。這在Flash Player上幾乎沒這個困擾，但在HTML5就不是這麼回事了。目前比較新版本的瀏覽器，例如Firefox、Safari、Chrome以及Opera幾個大廠牌的支援都還算OK。不過我想那些不是重點，你我關注的還是那老兵不死的IE!! 版本新一點的IE也許還OK，但至於舊一點的.. 這個嘛，我想這部份的細節就讓大家自行體會了，對於這個問題，我只能說「<strong>I DON’T CARE</strong>」。</p>

<h2>安裝</h2>

<p>基本上不用什麼特別的安裝，到EaselJS的<a href="https://github.com/gskinner/EaselJS">github repo</a>上把壓縮檔下載回來，解壓縮後把lib資料夾裡的easel.js拿出來，放到適當的目錄就能用了。EaselJS是open source的，而且還是MIT授權，所以你可以放心的使用。在這個當下取得的release版本是0.3.2。</p>

<h2>上路之前</h2>

<p>在開始之前，建議最好對HTML以及JavaScript有些基礎的認識，不然可能容易迷路。接下來，在EaselJS裡有幾個主要的類別你也會需要花點時間了解一下：</p>

<h3>DisplayObject體系</h3>

<h4>DisplayObject</h4>

<p>寫過AS3的朋友應該不陌生這個名詞(如果覺得陌生的話，不要跟別人說你會寫AS3喔)，它是所有可視物件(例如Bitmap、Shape、Text等)的最上層的父類別，定義一些基本屬性及方法，例如X、Y座標、放大縮小、旋轉、透明度等，更多細節請參閱文件<a href="http://easeljs.com/docs/DisplayObject.html">DisplayObject章節</a>。</p>

<h4>Stage</h4>

<p>閃客們，有回家的感覺了嗎? 這個在AS3就是整個場景的最上層(root)，但如果你從上往下看的話，也可以說是最下層的物件。Stage把Canvas包起來，然後在呼叫Stage的<code>tick()</code>或<code>update()</code>的時候會render被包起來的Canvas。不過跟AS3不同的是，在AS3裡Stage只會有一個，在EaselJS可以有一個以上。細節請參閱<a href="http://easeljs.com/docs/Stage.html">文件Stage章節</a>，或是看看底下的程式範例。</p>

<h4>Container</h4>

<p>這個在AS3是DisplayObjectContainer，在這邊名字變短了，但功能是差不多的，就是可以把一些DisplayObject包起來，以方便操作；當然你想要像在Flash裡面的一樣的一層包一層的巢狀結構也是可以的。在AS3裡常用的<code>addChild</code>、<code>addChildAt</code>、<code>removeChild</code>、<code>getNumChildren</code>等方法，以及碰撞偵測hitTest也都是在這個類別定義的。細節請見<a href="http://easeljs.com/docs/Container.html">Container章節</a>。</p>

<h4>Bitmap</h4>

<p>拿來裝圖片跟影片用的，請參閱文件<a href="http://easeljs.com/docs/Bitmap.html">Bitmap章節</a>。</p>

<h4>BitmapSequence</h4>

<p>這個可能會比較陌生一些了，你可以暫時先把它想像成跟Flash的時間軸差不多的東西，這個類別定義了在Flash裡很常用的<code>gotoAndPlay()</code>跟<code>gotoAndStop()</code>，也許之後透過一些實作會更清楚它是幹嘛的。細節請參閱文件<a href="http://easeljs.com/docs/BitmapSequence.html">BitmapSequence章節</a>。</p>

<h4>Shape</h4>

<p>底下會提到的Graphics類別其實是沒辦法把向量圖形直接畫到Canvas上的，得透過Shape類別的包裝，並放到Stage上才行。細節請見文件<a href="http://easeljs.com/docs/Shape.html">Shape章節</a>，或見底下的範例。</p>

<h4>Text</h4>

<p>看名字就知道它是用來處理文字的類別，請參閱文件<a href="http://easeljs.com/docs/Text.html">Text章節</a>。</p>

<p>附上一個我自己畫的DisplayObject類別關係圖：</p>

<p><img src="/images/2011/easeljs-displayobject.png" alt="image" /></p>

<h3>其它類別</h3>

<h4>Graphics</h4>

<p>提供了方便的API，讓你可以畫一些向量圖形用的，這個類別還滿重要的，詳細內容請參閱文件<a href="http://easeljs.com/docs/Graphics.html">Graphics章節</a>。</p>

<h4>SpriteSheet</h4>

<p>在Flash裡如果我們要做一個角色在跑步的MovieClip是很容易的，大概就是勞請設計師幫忙畫在跑步中的各個動作圖，然後使用關鍵影格，把各張圖片包在MovieClip就行了。這邊GS利用SpriteSheet來達到類似的功能，透過這個類別，你可以把一連串的圖片包成一個SpriteSheet來連續播放，看起來就有類似的動畫效果。細節請參閱文件<a href="http://easeljs.com/docs/SpriteSheet.html">SpriteSheet章節</a>。</p>

<h4>Ticker</h4>

<p>有點類似在Flash/AS裡ENTER_FRAME的東西，讓你可以在每個frame/interval做一些事情，細節請參閱<a href="http://easeljs.com/docs/Ticker.html">Ticker章節</a>。</p>

<p>整體來看，EaselJS的類別不到20個，建議花點時間看一下文件或原始碼，如果你曾經或現在是個Flash Developer、自認AS3還算ok，也許EaselJS對你來說也不會太難上手的。
來寫code吧</p>

<p>講再多沒來個範例一定沒感覺的，來做個會旋轉的正方形好了(我知道這範例還滿無聊的，沒比Hello World強到哪裡去，but just for demo purpose)：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>EaselJS Demo 001<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;easel.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen&quot;</span><span class="nt">&gt;</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">pre</span><span class="o">&gt;&lt;</span><span class="nt">code</span><span class="o">&gt;</span><span class="nf">#my_canvas</span><span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="nb">gray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">code</span><span class="o">&gt;&lt;/</span><span class="nt">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">stage</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">box</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">box_width</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">init</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;my_canvas&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Stage</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">graphics</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Graphics</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">graphics</span><span class="p">.</span><span class="nx">setStrokeStyle</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">graphics</span><span class="p">.</span><span class="nx">beginStroke</span><span class="p">(</span><span class="nx">Graphics</span><span class="p">.</span><span class="nx">getRGB</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mf">0.8</span><span class="p">));</span>
</span><span class='line'>  <span class="nx">graphics</span><span class="p">.</span><span class="nx">drawRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">box_width</span><span class="p">,</span> <span class="nx">box_width</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">box</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Shape</span><span class="p">(</span><span class="nx">graphics</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">regX</span> <span class="o">=</span> <span class="nx">box</span><span class="p">.</span><span class="nx">regY</span> <span class="o">=</span> <span class="nx">box_width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Ticker</span><span class="p">.</span><span class="nx">setFPS</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">Ticker</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">tick</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">rotation</span> <span class="o">+=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;javascript:init();&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;canvas</span> <span class="na">width=</span><span class="s">&quot;300&quot;</span> <span class="na">height=</span><span class="s">&quot;300&quot;</span> <span class="na">id=</span><span class="s">&quot;my_canvas&quot;</span><span class="nt">&gt;&lt;/canvas&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
效果如下：</p>

<iframe src="http://www.eddie.com.tw/labs/easeljs/001.html" width="320" height="320" frameborder="0"></iframe>


<p>或按<a href="http://www.eddie.com.tw/labs/easeljs/001.html">這裡</a>檢視效果。</p>

<p>HTML的部份就不多解釋，JavaScript的部份則是把剛才下載回來的easel.js給引進來，然後在body的onload的地方呼叫自己寫的init()。不一定要這樣做，甚至你想把jQuery也引進來用也沒問題，要注意的是，因為這裡僅是做個示範，所以這個簡單的範例沒有特別檢查該瀏覽器是否支援Canvas。</p>

<p>上面這個範例需要說明的大概就是init()裡的那幾行程式碼了：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;my_canvas&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Stage</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
取得canvas，並把canvas用stage包起來。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">graphics</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Graphics</span><span class="p">();</span>
</span><span class='line'><span class="nx">graphics</span><span class="p">.</span><span class="nx">setStrokeStyle</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'><span class="nx">graphics</span><span class="p">.</span><span class="nx">beginStroke</span><span class="p">(</span><span class="nx">Graphics</span><span class="p">.</span><span class="nx">getRGB</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mf">0.8</span><span class="p">));</span>
</span><span class='line'><span class="nx">graphics</span><span class="p">.</span><span class="nx">drawRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">box_width</span><span class="p">,</span> <span class="nx">box_width</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
利用Graphics類別把方塊畫出來，Graphics的method幾乎都是會回傳Graphics的instance回來，也就是說上面幾行例如setStrokeStyle()或是drawRect()等方法是可以直接串起來寫的。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">box</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Shape</span><span class="p">(</span><span class="nx">graphics</span><span class="p">);</span>
</span><span class='line'><span class="nx">box</span><span class="p">.</span><span class="nx">regX</span> <span class="o">=</span> <span class="nx">box</span><span class="p">.</span><span class="nx">regY</span> <span class="o">=</span> <span class="nx">box_width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="nx">box</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="nx">box</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
因為Graphics畫完即使加到stage上，也還是看不到(因為它不是DisplayObject，請見上面的類別圖)，所以你需要再用個Shape類別把它包起來，待會要把它放到stage裡。這裡的regX跟regY指的是這個shape的註冊點。如果你不知道註冊點是什麼，你可以試著把設定註冊點那行程式碼拿掉，再看看旋轉效果如何就知道了。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">stage</span><span class="p">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'><span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
呼叫addChild()把剛剛建立的box加到stage上，再呼叫update()來把上面的可視物件給render到canvas上。只有在stage叫呼update()或tick()方法的時候，canvas才會重畫。事實上，當stage呼叫update()的時候，會呼叫所有被這個stage包起來的instance的tick()方法。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Ticker</span><span class="p">.</span><span class="nx">setFPS</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
</span><span class='line'><span class="nx">Ticker</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
利用Ticker來設定FPS(每秒30格)，並加上listener。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">tick</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">rotation</span> <span class="o">+=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">stage</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
在每個interval把box轉動4度，然後重畫canvas。這個function一定要取名做tick()嗎? 別的名字不行嗎? 我們在前面請Ticker去監聽，Ticker在每個intereval就會去呼叫被監聽的物件上的tick()方法，所以你如果取做別的名字是沒用的。</p>

<p>如果你是AS3的閃客，應該不會覺得太難上手，如果不是，我想上面這程式也沒多難懂才是。</p>

<h2>結論</h2>

<ol>
<li>目前EaselJS仍是alpha版的，即使是GS大神非常神，但還是不敢保證在使用過程中不會遇到些神奇的狀況。我個人覺得以入門來說，這套用起來算是不會太難，況且GS大神自己也用這套framework幫微軟做了款守城遊戲(<a href="http://pirateslovedaisies.com/">Pirates Love Daisies</a>)，而且當初用的還只是0.1版的EaselJS。(我真的覺得像這樣可以吃自己做的狗食超棒!)</li>
<li>我沒有評估過或使用過市面上所有類似的framework，不確定在效能或功能上EaselJS是不是最佳選擇，不過目前看起來效能不至於到非常差，而且入門門檻對閃客來說也不算高。如果各位有能力，也可以直接到EaselJS的github repo去fork一份原始碼來研究看看，說不定也能幫忙貢獻一些心力。</li>
<li>目前網路上找得到的相關資料似乎不太多，所以官方文件將會是你最好的朋友，最好也跟原始碼做一下朋友。</li>
</ol>


<p>之後應該還會再實做幾個例子，順便再來幾篇文章，來分享一些更進階的心得。</p>

<h3>參考文件：</h3>

<ul>
<li>EaselJS的線上文件 <a href="http://easeljs.com/docs/">http://easeljs.com/docs/</a></li>
</ul>

]]></content>
  </entry>
  
</feed>